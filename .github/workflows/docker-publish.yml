name: Docker

on:
  push:
    branches: '*'
    tags: '*'
  pull_request:
    branches: "main"

env:
  BRANCH_NAME: ""
  BASE_SHA: ""


jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.check_changes.outputs.skip }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 确保获取所有历史

      - name: Get current branch name
        id: current_branch
        run: |
          echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Determine base SHA
        id: determine_base
        run: |
          BASE_SHA=$(git merge-base HEAD origin/${{ env.BRANCH_NAME }})
          echo "BASE_SHA=$BASE_SHA" >> $GITHUB_ENV
  
      - name: List all files
        run: |
          echo "Listing all files in repository:"
          git ls-tree -r HEAD --name-only

      - name: Show differences from base
        run: |
          echo "Differences from base ${{ env.BASE_SHA }} for branch ${{ env.BRANCH_NAME }}:"
          git diff ${{ env.BASE_SHA }} HEAD

      - name: Check for changes
        id: check_changes
        run: |
          echo "Checking for changes..."
          LAST_PUSH_COMMIT=$(git merge-base HEAD origin/${GITHUB_REF#refs/heads/})
          CHANGED_FILES=$(git diff --name-only $LAST_PUSH_COMMIT HEAD)
          echo "Changed files: $CHANGED_FILES"
          
          if [ -z "$CHANGED_FILES" ] || [[ "$CHANGED_FILES" =~ ^(README\.md|docs/.*)$ ]]; then
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

  run-action:
    runs-on: ubuntu-latest
    needs: check-changes
    if: ${{ needs.check-changes.outputs.skip != 'true' }}
    steps:
      - name: Run my action
        run: echo "This action runs if changes are not only in README or docs"